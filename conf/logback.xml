<!-- https://www.playframework.com/documentation/latest/SettingsLogger -->
<configuration scan="true" scanPeriod="10 seconds">

  <conversionRule conversionWord="coloredLevel" converterClass="play.api.libs.logback.ColoredLevel" />

  <appender name="FILE" class="ch.qos.logback.core.FileAppender">
    <file>${application.home:-.}/logs/application.log</file>
    <encoder>
      <pattern>%date [%level] from %logger in %thread - %message%n%xException</pattern>
    </encoder>
  </appender>

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%date %coloredLevel %logger{15} - %message%n%xException{30}</pattern>
    </encoder>
  </appender>

  <appender name="ASYNCFILE" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="FILE" />
  </appender>

  <appender name="ASYNCSTDOUT" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="STDOUT" />
  </appender>

  <appender name="Sentry" class="io.sentry.logback.SentryAppender">
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>WARN</level>
    </filter>
  </appender>

  <logger name="play" level="INFO" />
  <logger name="application" level="DEBUG" />
  <logger name="evolutions" level="INFO" />
  <logger name="evolutions" level="INFO" />
  <logger name="controllers.RequestLogger" level="DEBUG" />
  <logger name="controllers.QueryController" level="INFO" />
  <logger name="controllers.SavedQueryExecController" level="INFO" />
  <logger name="controllers.ServerErrorLogger" level="ERROR" />


  <!-- Off these ones as they are annoying, and anyway we manage configuration ourselves -->
  <logger name="com.avaje.ebean.config.PropertyMapLoader" level="OFF" />
  <logger name="com.avaje.ebeaninternal.server.core.XmlConfigLoader" level="OFF" />
  <logger name="com.avaje.ebeaninternal.server.lib.BackgroundThread" level="OFF" />
  <logger name="com.gargoylesoftware.htmlunit.javascript" level="OFF" />

  <logger name="io.jaegertracing.internal.JaegerTracer" level="DEBUG" />
  <logger name="io.jaegertracing.internal.reporters.RemoteReporter" level="DEBUG" />
  <logger name="io.jaegertracing.internal.JaegerSpan" level="DEBUG" />
  <logger name="io.jaegertracing.internal.reporters.LoggingReporter" level="DEBUG" />

  <logger name="org.apache.spark.util.ClosureCleaner" level="ERROR" />
  <logger name="org.apache.spark.executor.Executor" level="ERROR" />

  <!--<logger name="com.zaxxer.hikari" level="DEBUG" />-->

  <!--<logger name="org.apache.calcite.prepare.Prepare" level="DEBUG" />-->

  <!-- The following loggers can be used to enable plan tracing at different stages -->
  <!--<logger name="pantheon.planner.Planner" level="DEBUG" />-->
  <!--<logger name="pantheon.backend.calcite.CalciteGenerator" level="DEBUG" />-->
  <!--<logger name="pantheon.PantheonSpec" level="DEBUG" />-->
  <logger name="pantheon.AggregateStatement" level="DEBUG" />
  <logger name="pantheon.SqlStatement" level="DEBUG" />
  <logger name="pantheon.RecordStatement" level="DEBUG" />

  <!--<logger name="jdbc.PantheonMetaImpl" level="DEBUG" />-->


  <!--<logger name="org.apache.calcite.plan.RelOptPlanner" level="TRACE" />-->

  <root level="WARN">
    <appender-ref ref="ASYNCFILE" />
    <appender-ref ref="ASYNCSTDOUT" />
    <appender-ref ref="Sentry" />
  </root>

</configuration>
