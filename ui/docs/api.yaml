swagger: "2.0"

info:
  version: "0.0.2"
  title: Pantheon

schemes:
  - http

consumes:
  - application/json

produces:
  - application/json

#############
# Tags
#############
tags:
  - description: Available data sources (RDMBS, NoSQL, ...)
    name: data_source
  - description: A subset of data sources that can be queried together
    name: catalog
  - description: A logical model describing possible queries
    name: model
  - description: Querying data
    name: query

#############
# Definitions
#############
definitions:

  # Datasource
  #############
  DatasourceId:
    type: string
    format: uuid
    description: Autogenerated datasource UUID

  DataSourceUpdate:
    type: object
    title: Updated data source
    properties:
      name:
        description: Nice name
        type: string
      description:
        type: string
      location_uri:
        description: Location of the data source (jdbc:mysql://myhost.org:456/warehouse1, file:///var/lib/some_dir)
        type: string
      config:
        type: object
        properties:
          user:
            type: string
          password:
            type: string
    required:
      - name
      - location_uri

  DataSourceNew:
    type: object
    title: New data source
    properties:
      name:
        description: Nice name
        type: string
      description:
        type: string
      backend:
        description: Data source type (jdbc, file)
        type: string
      location_uri:
        description: Location of the data source (jdbc:mysql://myhost.org:456/warehouse1, file:///var/lib/some_dir)
        type: string
      config:
        type: object
        properties:
          user:
            type: string
          password:
            type: string
    required:
      - name
      - backend
      - location_uri

  DataSource:
    title: Data source
    allOf:
    - $ref: '#/definitions/DataSourceNew'
    - type: object
      properties:
        id:
          $ref: '#/definitions/DatasourceId'

  TableId:
    type: string
    format: uuid
    description: Autogenerated table UUID

  Table:
    type: object
    properties:
      data_source_id:
        $ref: '#/definitions/DatasourceId'
      id:
        $ref: '#/definitions/TableId'
      name:
        type: string
      description:
        type: string
      key:
        description: Autogenerated from storage_key if not supplied, must be unique within the data source
        type: string
      storage_key:
        description: Reference to the table (e.g. "articles", "payments_2016*.csv")
        type: string
      config:
        type: object
        properties:
          separator:
            type: string

  ColumnId:
    type: string
    format: uuid
    description: Autogenerated column UUID

  Column:
    type: object
    properties:
      table_id:
        $ref: '#/definitions/TableId'
      id:
        $ref: '#/definitions/ColumnId'
      name:
        type: string
      description:
        type: string
      key:
        description: Same as the storage_key (for now - cannot change the column key in spark)
        type: string
      storage_key:
        description: Reference to the column (e.g. "article_id", "user count")
        type: string
      data_type:
        description: Data type of the column
        type: string

  # Catalog
  #############
  CatalogId:
    type: string
    format: uuid
    description: Autogenerated catalog UUID

  CatalogNew:
    type: object
    properties:
      key:
        description: Autogenerated from name if not supplied
        type: string
      name:
        description: A nice name
        type: string
      description:
        description: A nice description
        type: string
    required:
      - name

  Catalog:
    allOf:
    - $ref: '#/definitions/CatalogNew'
    - type: object
      properties:
        id:
          $ref: '#/definitions/CatalogId'

  # Catalog datasource link
  #############
  CatalogDatasourceLinkId:
    type: string
    format: uuid
    description: Autogenerated catalog datasource link UUID

  CatalogDataSourceLinkUpdate:
    type: object
    properties:
      key:
        description: Must be unique within a catalog
        type: string
    required:
      - key

  CatalogDataSourceLinkNew:
    type: object
    properties:
      catalog_id:
        $ref: '#/definitions/CatalogId'
      data_source_id:
        $ref: '#/definitions/DatasourceId'
      key:
        description: Autogenerated if not supplied - must be unique within a catalog
        type: string
    required:
      - catalog_id
      - data_source_id

  CatalogDataSourceLink:
    allOf:
    - $ref: '#/definitions/CatalogDataSourceLinkNew'
    - type: object
      properties:
        id:
          $ref: '#/definitions/CatalogDatasourceLinkId'

  # Model
  #############
  TableModelId:
    type: string
    format: uuid
    description: Autogenerated table model UUID

  TableModelDefinition:
    type: string
    description: Table model definition

  TableModel:
    type: object
    properties:
      table_id:
        $ref: '#/definitions/TableId'
      id:
        $ref: '#/definitions/TableModelId'
      key:
        description: Autogenerated from table_key if not supplied, must be unique within the data source
        type: string
      model:
        $ref: '#/definitions/TableModelDefinition'

  DatasourceModelId:
    type: string
    format: uuid
    description: Autogenerated datasource model UUID

  DatasourceModelDefinition:
    type: string
    description: Datasource model definition

  DatasourceModel:
    type: object
    properties:
      datasource_id:
        $ref: '#/definitions/DatasourceId'
      id:
        $ref: '#/definitions/DatasourceModelId'
      model:
        $ref: '#/definitions/DatasourceModelDefinition'

  CatalogModelId:
    type: string
    format: uuid
    description: Autogenerated catalog model UUID

  CatalogModelDefinition:
    type: string
    description: Catalog model definition

  CatalogModel:
    type: object
    properties:
      catalog_id:
        $ref: '#/definitions/CatalogId'
      id:
        $ref: '#/definitions/CatalogModelId'
      model:
        $ref: '#/definitions/CatalogModelDefinition'

  # Query
  #############
  QueryMeasureKey:
    type: string
    description: Measure key

  QueryDimensionKey:
    type: string
    description: Dimension key

  QueryFilter:
    type: object
    description: Query filter definition

  Query:
    type: object
    properties:
      measures:
        type: array
        items:
          $ref: '#/definitions/QueryMeasureKey'
      columns:
        type: array
        items:
          $ref: '#/definitions/QueryDimensionKey'
      rows:
        type: array
        items:
          $ref: '#/definitions/QueryDimensionKey'
      filters:
        type: array
        items:
          $ref: '#/definitions/QueryFilter'
      measure_position:
        type: string
        enum:
          - measures|columns
          - columns|measures
          - rows|columns
          - columns|rows

  QueryResponse:
    type: object
    properties:
      column_headers:
        description: Header for columns
        type: array
        items:
          type: object
      row_headers:
        description: Header for rows
        type: array
        items:
          type: object
      rows:
        description: Result rows
        type: array
        items:
          description: Row data
          type: array
          items:
            description: Cell data
      columns:
        description: Result columns
        type: array
        items:
          description: Column data
          type: array
          items:
            description: Cell data

#############
# Paths
#############
paths:

  # Datasource
  #############
  /data_sources:
    get:
      summary: List data sources
      tags:
        - data_source
      responses:
        200:
          description: Successful response
          schema:
            title: DataSources
            type: array
            items:
              $ref: '#/definitions/DataSource'
    post:
      tags:
        - data_source
      summary: Create new data source
      parameters:
        - in: body
          name: data_source
          description: Data source to create
          required: true
          schema:
            $ref: '#/definitions/DataSourceNew'
      responses:
        201:
          description: Successful response
          schema:
            $ref: '#/definitions/DataSource'

  /data_sources/{id}:
    parameters:
      - in: path
        name: id
        description: UUID
        required: true
        type: string
        format: uuid
    get:
      tags:
        - data_source
      summary: Get a details for a data source
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/DataSource'
    put:
      tags:
        - data_source
      summary: Update data source
      parameters:
        - in: body
          name: data_source
          description: Data source parameters to update
          required: true
          schema:
            $ref: '#/definitions/DataSourceUpdate'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/DataSource'
    delete:
      tags:
        - data_source
      summary: Delete data source
      responses:
        200:
          description: Successful response

  /data_sources/{data_source_id}/tables:
    parameters:
      - in: path
        name: data_source_id
        description: UUID
        required: true
        type: string
        format: uuid
    get:
      tags:
        - data_source
      summary: List tables
      responses:
        200:
          description: Successful response
          schema:
            title: Tables
            type: array
            items:
              $ref: '#/definitions/Table'

  /data_sources/{data_source_id}/tables/{id}:
    parameters:
      - in: path
        name: data_source_id
        description: UUID
        required: true
        type: string
        format: uuid
      - in: path
        name: id
        description: UUID table id
        required: true
        type: string
        format: uuid
    get:
      tags:
        - data_source
      summary: Get details for a table
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Table'

  /data_sources/{data_source_id}/tables/{table_id}/columns:
    parameters:
      - in: path
        name: data_source_id
        description: UUID
        required: true
        type: string
        format: uuid
      - in: path
        name: table_id
        description: UUID table id
        required: true
        type: string
        format: uuid
    get:
      tags:
        - data_source
      summary: List columns
      responses:
        200:
          description: Successful response
          schema:
            title: Columns
            type: array
            items:
              $ref: '#/definitions/Column'

  # Catalog
  #############
  /catalogs:
    get:
      tags:
        - catalog
      summary: List of catalogs
      responses:
        200:
          description: Successful response
          schema:
            title: Catalogs
            type: array
            items:
              $ref: '#/definitions/Catalog'
    post:
      tags:
        - catalog
      summary: Create new catalog
      parameters:
        - in: body
          name: body
          description: Catalog to create
          required: true
          schema:
            $ref: '#/definitions/CatalogNew'
      responses:
        201:
          description: successful response
          schema:
            $ref: '#/definitions/Catalog'

  /catalogs/{id}:
    parameters:
      - in: path
        name: id
        description: UUID
        required: true
        type: string
        format: uuid
    get:
      tags:
        - catalog
      summary: Get details for a catalog
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Catalog'
    put:
      tags:
        - catalog
      summary: Update catalog
      parameters:
        - in: body
          name: body
          description: Catalog parameters to update
          required: true
          schema:
            $ref: '#/definitions/CatalogNew'
      responses:
        200:
          description: successful response
          schema:
            $ref: '#/definitions/Catalog'
    delete:
      tags:
        - catalog
      summary: Delete catalog
      responses:
        200:
          description: Successful response

  # Data source link
  #############
  /catalogs/{catalog_id}/data_source_links:
    parameters:
      - name: catalog_id
        in: path
        description: UUID
        required: true
        type: string
        format: uuid
    get:
      tags:
        - data_source_link
      summary: List data source links for catalog
      responses:
        200:
          description: Successful response
          schema:
            title: Catalog DataSourceLinks
            type: array
            items:
              $ref: '#/definitions/CatalogDataSourceLink'
    post:
      tags:
        - data_source_link
      summary: Create new data source link
      parameters:
        - in: body
          name: catalog_data_source_link
          description: Data source link to create
          required: true
          schema:
            $ref: '#/definitions/CatalogDataSourceLinkNew'
      responses:
        201:
          description: Successful response
          schema:
            $ref: '#/definitions/CatalogDataSourceLink'

  /catalogs/{catalog_id}/data_source_links/{id}:
    parameters:
      - name: catalog_id
        in: path
        description: UUID
        required: true
        type: string
        format: uuid
      - in: path
        name: id
        description: UUID
        required: true
        type: string
        format: uuid
    get:
      tags:
        - data_source_link
      summary: Get details for a data source link
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/CatalogDataSourceLink'
    put:
      tags:
        - data_source_link
      summary: Update data source link
      parameters:
        - in: body
          name: catalog_data_source_link
          description: Data source parameters to update (only "key" allowed)
          required: true
          schema:
            $ref: '#/definitions/CatalogDataSourceLinkUpdate'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/CatalogDataSourceLink'
    delete:
      tags:
        - data_source_link
      summary: Delete data source link
      responses:
        200:
          description: Successful response

  # Model
  #############
  /data_sources/{data_source_id}/tables/{table_id}/model:
    parameters:
      - name: data_source_id
        in: path
        description: UUID
        required: true
        type: string
        format: uuid
      - name: table_id
        in: path
        description: UUID table id
        required: true
        type: string
        format: uuid
    get:
      tags:
        - model
      summary: Get details for a table model
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/TableModel'
    post:
      tags:
        - model
      summary: Persist table model
      parameters:
        - in: body
          name: body
          description: Model to persist
          required: true
          schema:
            $ref: '#/definitions/TableModelDefinition'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/TableModel'

  /data_sources/{data_source_id}/model:
    parameters:
      - name: data_source_id
        in: path
        description: UUID
        required: true
        type: string
    get:
      tags:
        - model
      summary: Get details for a datasource model
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/DatasourceModel'
    post:
      tags:
        - model
      summary: Persist datasource model
      parameters:
        - in: body
          name: body
          description: Model to persist
          required: true
          schema:
            $ref: '#/definitions/DatasourceModelDefinition'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/DatasourceModel'

  /catalog/{catalog_id}/model:
    parameters:
      - name: catalog_id
        in: path
        description: UUID
        required: true
        type: string
    get:
      tags:
        - model
      summary: Get details for a catalog model
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/CatalogModel'
    post:
      tags:
        - model
      summary: Persist catalog model
      parameters:
        - in: body
          name: body
          description: Model to persist
          required: true
          schema:
            $ref: '#/definitions/CatalogModelDefinition'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/CatalogModel'

  # Query
  #############
  /catalogs/{catalog_id}/query:
    parameters:
      - name: catalog_id
        in: path
        description: uuid
        required: true
        type: string
    post:
      tags:
        - query
      summary: Query a catalog
      parameters:
        - name: query
          in: body
          description: query
          required: true
          schema:
            $ref: '#/definitions/Query'
      responses:
        200:
          description: successful response
          schema:
            $ref: '#/definitions/QueryResponse'